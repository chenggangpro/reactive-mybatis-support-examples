package pro.chenggang.example.reactive.mybatis.r2dbc.mapper;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.SelectProvider;
import org.mybatis.dynamic.sql.select.render.SelectStatementProvider;
import org.mybatis.dynamic.sql.util.SqlProviderAdapter;
import pro.chenggang.example.reactive.mybatis.r2dbc.entity.extend.DeptWithEmp;
import pro.chenggang.example.reactive.mybatis.r2dbc.entity.model.Dept;
import pro.chenggang.example.reactive.mybatis.r2dbc.mapper.dynamic.DeptDynamicMapper;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

import java.time.LocalDateTime;

/**
 * auto generated
 * @author autoGenerated
 */
@Mapper
public interface DeptMapper extends DeptDynamicMapper {

    Mono<Long> countAll();

    Flux<Dept> selectAll();

    Mono<Dept> selectOneByDeptNo(Long deptNo);

    Flux<Dept> selectListByTime(LocalDateTime createTime);

    Mono<Integer> insertOne(Dept dept);

    Mono<Integer> insertUseSelectKey(Dept dept);

    Mono<Integer> deleteByDeptNo(Long deptNo);

    Mono<Integer> updateByDeptNo(Dept dept);

    Flux<DeptWithEmp> selectDeptWithEmpList();

    @SelectProvider(type= SqlProviderAdapter.class, method="select")
    @ResultMap("pro.chenggang.example.reactive.mybatis.r2dbc.mapper.DeptMapper.DeptWithEmp")
    Flux<DeptWithEmp> selectManyDeptWithEmp(SelectStatementProvider selectStatement);

}